// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: net/outbe/common/v1/money.proto
// Protobuf Java Version: 4.33.0

package net.outbe.common.v1;

@com.google.protobuf.Generated
public final class MoneyOuterClass extends com.google.protobuf.GeneratedFile {
  private MoneyOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 33,
      /* patch= */ 0,
      /* suffix= */ "",
      "MoneyOuterClass");
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MoneyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:net.outbe.common.v1.Money)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Amount currency according to ISO 4217 standard
     * </pre>
     *
     * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
     * @return The enum numeric value on the wire for currency.
     */
    int getCurrencyValue();
    /**
     * <pre>
     * Amount currency according to ISO 4217 standard
     * </pre>
     *
     * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
     * @return The currency.
     */
    net.outbe.common.v1.CurrencyOuterClass.Currency getCurrency();

    /**
     * <pre>
     * The whole units of the amount.
     * For example if `currency` is `"USD"`, then 1 unit is one US dollar.
     * </pre>
     *
     * <code>uint64 units = 10 [json_name = "units"];</code>
     * @return The units.
     */
    long getUnits();

    /**
     * <pre>
     * Number of atto (10^-18) units of the amount.
     * </pre>
     *
     * <code>uint64 atto = 11 [json_name = "atto"];</code>
     * @return The atto.
     */
    long getAtto();
  }
  /**
   * <pre>
   * *
   * Represents an amount of money with its currency type.
   * </pre>
   *
   * Protobuf type {@code net.outbe.common.v1.Money}
   */
  public static final class Money extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:net.outbe.common.v1.Money)
      MoneyOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 33,
        /* patch= */ 0,
        /* suffix= */ "",
        "Money");
    }
    // Use Money.newBuilder() to construct.
    private Money(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Money() {
      currency_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.outbe.common.v1.MoneyOuterClass.internal_static_net_outbe_common_v1_Money_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.outbe.common.v1.MoneyOuterClass.internal_static_net_outbe_common_v1_Money_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.outbe.common.v1.MoneyOuterClass.Money.class, net.outbe.common.v1.MoneyOuterClass.Money.Builder.class);
    }

    public static final int CURRENCY_FIELD_NUMBER = 1;
    private int currency_ = 0;
    /**
     * <pre>
     * Amount currency according to ISO 4217 standard
     * </pre>
     *
     * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
     * @return The enum numeric value on the wire for currency.
     */
    @java.lang.Override public int getCurrencyValue() {
      return currency_;
    }
    /**
     * <pre>
     * Amount currency according to ISO 4217 standard
     * </pre>
     *
     * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
     * @return The currency.
     */
    @java.lang.Override public net.outbe.common.v1.CurrencyOuterClass.Currency getCurrency() {
      net.outbe.common.v1.CurrencyOuterClass.Currency result = net.outbe.common.v1.CurrencyOuterClass.Currency.forNumber(currency_);
      return result == null ? net.outbe.common.v1.CurrencyOuterClass.Currency.UNRECOGNIZED : result;
    }

    public static final int UNITS_FIELD_NUMBER = 10;
    private long units_ = 0L;
    /**
     * <pre>
     * The whole units of the amount.
     * For example if `currency` is `"USD"`, then 1 unit is one US dollar.
     * </pre>
     *
     * <code>uint64 units = 10 [json_name = "units"];</code>
     * @return The units.
     */
    @java.lang.Override
    public long getUnits() {
      return units_;
    }

    public static final int ATTO_FIELD_NUMBER = 11;
    private long atto_ = 0L;
    /**
     * <pre>
     * Number of atto (10^-18) units of the amount.
     * </pre>
     *
     * <code>uint64 atto = 11 [json_name = "atto"];</code>
     * @return The atto.
     */
    @java.lang.Override
    public long getAtto() {
      return atto_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (currency_ != net.outbe.common.v1.CurrencyOuterClass.Currency.CURRENCY_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, currency_);
      }
      if (units_ != 0L) {
        output.writeUInt64(10, units_);
      }
      if (atto_ != 0L) {
        output.writeUInt64(11, atto_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (currency_ != net.outbe.common.v1.CurrencyOuterClass.Currency.CURRENCY_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, currency_);
      }
      if (units_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, units_);
      }
      if (atto_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, atto_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.outbe.common.v1.MoneyOuterClass.Money)) {
        return super.equals(obj);
      }
      net.outbe.common.v1.MoneyOuterClass.Money other = (net.outbe.common.v1.MoneyOuterClass.Money) obj;

      if (currency_ != other.currency_) return false;
      if (getUnits()
          != other.getUnits()) return false;
      if (getAtto()
          != other.getAtto()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
      hash = (53 * hash) + currency_;
      hash = (37 * hash) + UNITS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUnits());
      hash = (37 * hash) + ATTO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAtto());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static net.outbe.common.v1.MoneyOuterClass.Money parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static net.outbe.common.v1.MoneyOuterClass.Money parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static net.outbe.common.v1.MoneyOuterClass.Money parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.outbe.common.v1.MoneyOuterClass.Money prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * *
     * Represents an amount of money with its currency type.
     * </pre>
     *
     * Protobuf type {@code net.outbe.common.v1.Money}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:net.outbe.common.v1.Money)
        net.outbe.common.v1.MoneyOuterClass.MoneyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.outbe.common.v1.MoneyOuterClass.internal_static_net_outbe_common_v1_Money_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.outbe.common.v1.MoneyOuterClass.internal_static_net_outbe_common_v1_Money_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.outbe.common.v1.MoneyOuterClass.Money.class, net.outbe.common.v1.MoneyOuterClass.Money.Builder.class);
      }

      // Construct using net.outbe.common.v1.MoneyOuterClass.Money.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        currency_ = 0;
        units_ = 0L;
        atto_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.outbe.common.v1.MoneyOuterClass.internal_static_net_outbe_common_v1_Money_descriptor;
      }

      @java.lang.Override
      public net.outbe.common.v1.MoneyOuterClass.Money getDefaultInstanceForType() {
        return net.outbe.common.v1.MoneyOuterClass.Money.getDefaultInstance();
      }

      @java.lang.Override
      public net.outbe.common.v1.MoneyOuterClass.Money build() {
        net.outbe.common.v1.MoneyOuterClass.Money result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.outbe.common.v1.MoneyOuterClass.Money buildPartial() {
        net.outbe.common.v1.MoneyOuterClass.Money result = new net.outbe.common.v1.MoneyOuterClass.Money(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(net.outbe.common.v1.MoneyOuterClass.Money result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.currency_ = currency_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.units_ = units_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.atto_ = atto_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.outbe.common.v1.MoneyOuterClass.Money) {
          return mergeFrom((net.outbe.common.v1.MoneyOuterClass.Money)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.outbe.common.v1.MoneyOuterClass.Money other) {
        if (other == net.outbe.common.v1.MoneyOuterClass.Money.getDefaultInstance()) return this;
        if (other.currency_ != 0) {
          setCurrencyValue(other.getCurrencyValue());
        }
        if (other.getUnits() != 0L) {
          setUnits(other.getUnits());
        }
        if (other.getAtto() != 0L) {
          setAtto(other.getAtto());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                currency_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 80: {
                units_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 80
              case 88: {
                atto_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 88
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int currency_ = 0;
      /**
       * <pre>
       * Amount currency according to ISO 4217 standard
       * </pre>
       *
       * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
       * @return The enum numeric value on the wire for currency.
       */
      @java.lang.Override public int getCurrencyValue() {
        return currency_;
      }
      /**
       * <pre>
       * Amount currency according to ISO 4217 standard
       * </pre>
       *
       * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
       * @param value The enum numeric value on the wire for currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrencyValue(int value) {
        currency_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Amount currency according to ISO 4217 standard
       * </pre>
       *
       * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
       * @return The currency.
       */
      @java.lang.Override
      public net.outbe.common.v1.CurrencyOuterClass.Currency getCurrency() {
        net.outbe.common.v1.CurrencyOuterClass.Currency result = net.outbe.common.v1.CurrencyOuterClass.Currency.forNumber(currency_);
        return result == null ? net.outbe.common.v1.CurrencyOuterClass.Currency.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Amount currency according to ISO 4217 standard
       * </pre>
       *
       * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
       * @param value The currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrency(net.outbe.common.v1.CurrencyOuterClass.Currency value) {
        if (value == null) { throw new NullPointerException(); }
        bitField0_ |= 0x00000001;
        currency_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Amount currency according to ISO 4217 standard
       * </pre>
       *
       * <code>.net.outbe.common.v1.Currency currency = 1 [json_name = "currency"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currency_ = 0;
        onChanged();
        return this;
      }

      private long units_ ;
      /**
       * <pre>
       * The whole units of the amount.
       * For example if `currency` is `"USD"`, then 1 unit is one US dollar.
       * </pre>
       *
       * <code>uint64 units = 10 [json_name = "units"];</code>
       * @return The units.
       */
      @java.lang.Override
      public long getUnits() {
        return units_;
      }
      /**
       * <pre>
       * The whole units of the amount.
       * For example if `currency` is `"USD"`, then 1 unit is one US dollar.
       * </pre>
       *
       * <code>uint64 units = 10 [json_name = "units"];</code>
       * @param value The units to set.
       * @return This builder for chaining.
       */
      public Builder setUnits(long value) {

        units_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The whole units of the amount.
       * For example if `currency` is `"USD"`, then 1 unit is one US dollar.
       * </pre>
       *
       * <code>uint64 units = 10 [json_name = "units"];</code>
       * @return This builder for chaining.
       */
      public Builder clearUnits() {
        bitField0_ = (bitField0_ & ~0x00000002);
        units_ = 0L;
        onChanged();
        return this;
      }

      private long atto_ ;
      /**
       * <pre>
       * Number of atto (10^-18) units of the amount.
       * </pre>
       *
       * <code>uint64 atto = 11 [json_name = "atto"];</code>
       * @return The atto.
       */
      @java.lang.Override
      public long getAtto() {
        return atto_;
      }
      /**
       * <pre>
       * Number of atto (10^-18) units of the amount.
       * </pre>
       *
       * <code>uint64 atto = 11 [json_name = "atto"];</code>
       * @param value The atto to set.
       * @return This builder for chaining.
       */
      public Builder setAtto(long value) {

        atto_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of atto (10^-18) units of the amount.
       * </pre>
       *
       * <code>uint64 atto = 11 [json_name = "atto"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAtto() {
        bitField0_ = (bitField0_ & ~0x00000004);
        atto_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:net.outbe.common.v1.Money)
    }

    // @@protoc_insertion_point(class_scope:net.outbe.common.v1.Money)
    private static final net.outbe.common.v1.MoneyOuterClass.Money DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.outbe.common.v1.MoneyOuterClass.Money();
    }

    public static net.outbe.common.v1.MoneyOuterClass.Money getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Money>
        PARSER = new com.google.protobuf.AbstractParser<Money>() {
      @java.lang.Override
      public Money parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Money> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Money> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.outbe.common.v1.MoneyOuterClass.Money getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_net_outbe_common_v1_Money_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_outbe_common_v1_Money_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037net/outbe/common/v1/money.proto\022\023net.o" +
      "utbe.common.v1\032\"net/outbe/common/v1/curr" +
      "ency.proto\"l\n\005Money\0229\n\010currency\030\001 \001(\0162\035." +
      "net.outbe.common.v1.CurrencyR\010currency\022\024" +
      "\n\005units\030\n \001(\004R\005units\022\022\n\004atto\030\013 \001(\004R\004atto" +
      "B6Z4github.com/outbe/fingerprinting/clie" +
      "nts/go/common/v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          net.outbe.common.v1.CurrencyOuterClass.getDescriptor(),
        });
    internal_static_net_outbe_common_v1_Money_descriptor =
      getDescriptor().getMessageType(0);
    internal_static_net_outbe_common_v1_Money_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_net_outbe_common_v1_Money_descriptor,
        new java.lang.String[] { "Currency", "Units", "Atto", });
    descriptor.resolveAllFeaturesImmutable();
    net.outbe.common.v1.CurrencyOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
