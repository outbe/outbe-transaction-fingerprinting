// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: net/outbe/common/v1/currency.proto
// Protobuf Java Version: 4.33.0

package net.outbe.common.v1;

@com.google.protobuf.Generated
public final class CurrencyOuterClass extends com.google.protobuf.GeneratedFile {
  private CurrencyOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 33,
      /* patch= */ 0,
      /* suffix= */ "",
      "CurrencyOuterClass");
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Currency codes as specified in ISO 4217
   * </pre>
   *
   * Protobuf enum {@code net.outbe.common.v1.Currency}
   */
  public enum Currency
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * XXX = 999; // Changed to 0 because proto3 requires the default to be 0
     * </pre>
     *
     * <code>CURRENCY_UNSPECIFIED = 0;</code>
     */
    CURRENCY_UNSPECIFIED(0),
    /**
     * <pre>
     * Stands for Albania, not all ;-)
     * </pre>
     *
     * <code>CURRENCY_ALL = 8;</code>
     */
    CURRENCY_ALL(8),
    /**
     * <code>CURRENCY_DZD = 12;</code>
     */
    CURRENCY_DZD(12),
    /**
     * <code>CURRENCY_ARS = 32;</code>
     */
    CURRENCY_ARS(32),
    /**
     * <code>CURRENCY_AUD = 36;</code>
     */
    CURRENCY_AUD(36),
    /**
     * <code>CURRENCY_BSD = 44;</code>
     */
    CURRENCY_BSD(44),
    /**
     * <code>CURRENCY_BHD = 48;</code>
     */
    CURRENCY_BHD(48),
    /**
     * <code>CURRENCY_BDT = 50;</code>
     */
    CURRENCY_BDT(50),
    /**
     * <code>CURRENCY_AMD = 51;</code>
     */
    CURRENCY_AMD(51),
    /**
     * <code>CURRENCY_BBD = 52;</code>
     */
    CURRENCY_BBD(52),
    /**
     * <code>CURRENCY_BMD = 60;</code>
     */
    CURRENCY_BMD(60),
    /**
     * <code>CURRENCY_BTN = 64;</code>
     */
    CURRENCY_BTN(64),
    /**
     * <code>CURRENCY_BOB = 68;</code>
     */
    CURRENCY_BOB(68),
    /**
     * <code>CURRENCY_BWP = 72;</code>
     */
    CURRENCY_BWP(72),
    /**
     * <code>CURRENCY_BZD = 84;</code>
     */
    CURRENCY_BZD(84),
    /**
     * <code>CURRENCY_SBD = 90;</code>
     */
    CURRENCY_SBD(90),
    /**
     * <code>CURRENCY_BND = 96;</code>
     */
    CURRENCY_BND(96),
    /**
     * <code>CURRENCY_MMK = 104;</code>
     */
    CURRENCY_MMK(104),
    /**
     * <code>CURRENCY_BIF = 108;</code>
     */
    CURRENCY_BIF(108),
    /**
     * <code>CURRENCY_KHR = 116;</code>
     */
    CURRENCY_KHR(116),
    /**
     * <code>CURRENCY_CAD = 124;</code>
     */
    CURRENCY_CAD(124),
    /**
     * <code>CURRENCY_CVE = 132;</code>
     */
    CURRENCY_CVE(132),
    /**
     * <code>CURRENCY_KYD = 136;</code>
     */
    CURRENCY_KYD(136),
    /**
     * <code>CURRENCY_LKR = 144;</code>
     */
    CURRENCY_LKR(144),
    /**
     * <code>CURRENCY_CLP = 152;</code>
     */
    CURRENCY_CLP(152),
    /**
     * <code>CURRENCY_CNY = 156;</code>
     */
    CURRENCY_CNY(156),
    /**
     * <code>CURRENCY_COP = 170;</code>
     */
    CURRENCY_COP(170),
    /**
     * <code>CURRENCY_KMF = 174;</code>
     */
    CURRENCY_KMF(174),
    /**
     * <code>CURRENCY_CRC = 188;</code>
     */
    CURRENCY_CRC(188),
    /**
     * <code>CURRENCY_HRK = 191;</code>
     */
    CURRENCY_HRK(191),
    /**
     * <code>CURRENCY_CUP = 192;</code>
     */
    CURRENCY_CUP(192),
    /**
     * <code>CURRENCY_CZK = 203;</code>
     */
    CURRENCY_CZK(203),
    /**
     * <code>CURRENCY_DKK = 208;</code>
     */
    CURRENCY_DKK(208),
    /**
     * <code>CURRENCY_DOP = 214;</code>
     */
    CURRENCY_DOP(214),
    /**
     * <code>CURRENCY_SVC = 222;</code>
     */
    CURRENCY_SVC(222),
    /**
     * <code>CURRENCY_ETB = 230;</code>
     */
    CURRENCY_ETB(230),
    /**
     * <code>CURRENCY_ERN = 232;</code>
     */
    CURRENCY_ERN(232),
    /**
     * <code>CURRENCY_FKP = 238;</code>
     */
    CURRENCY_FKP(238),
    /**
     * <code>CURRENCY_FJD = 242;</code>
     */
    CURRENCY_FJD(242),
    /**
     * <code>CURRENCY_DJF = 262;</code>
     */
    CURRENCY_DJF(262),
    /**
     * <code>CURRENCY_GMD = 270;</code>
     */
    CURRENCY_GMD(270),
    /**
     * <code>CURRENCY_GIP = 292;</code>
     */
    CURRENCY_GIP(292),
    /**
     * <code>CURRENCY_GTQ = 320;</code>
     */
    CURRENCY_GTQ(320),
    /**
     * <code>CURRENCY_GNF = 324;</code>
     */
    CURRENCY_GNF(324),
    /**
     * <code>CURRENCY_GYD = 328;</code>
     */
    CURRENCY_GYD(328),
    /**
     * <code>CURRENCY_HTG = 332;</code>
     */
    CURRENCY_HTG(332),
    /**
     * <code>CURRENCY_HNL = 340;</code>
     */
    CURRENCY_HNL(340),
    /**
     * <code>CURRENCY_HKD = 344;</code>
     */
    CURRENCY_HKD(344),
    /**
     * <code>CURRENCY_HUF = 348;</code>
     */
    CURRENCY_HUF(348),
    /**
     * <code>CURRENCY_ISK = 352;</code>
     */
    CURRENCY_ISK(352),
    /**
     * <code>CURRENCY_INR = 356;</code>
     */
    CURRENCY_INR(356),
    /**
     * <code>CURRENCY_IDR = 360;</code>
     */
    CURRENCY_IDR(360),
    /**
     * <code>CURRENCY_IRR = 364;</code>
     */
    CURRENCY_IRR(364),
    /**
     * <code>CURRENCY_IQD = 368;</code>
     */
    CURRENCY_IQD(368),
    /**
     * <code>CURRENCY_ILS = 376;</code>
     */
    CURRENCY_ILS(376),
    /**
     * <code>CURRENCY_JMD = 388;</code>
     */
    CURRENCY_JMD(388),
    /**
     * <code>CURRENCY_JPY = 392;</code>
     */
    CURRENCY_JPY(392),
    /**
     * <code>CURRENCY_KZT = 398;</code>
     */
    CURRENCY_KZT(398),
    /**
     * <code>CURRENCY_JOD = 400;</code>
     */
    CURRENCY_JOD(400),
    /**
     * <code>CURRENCY_KES = 404;</code>
     */
    CURRENCY_KES(404),
    /**
     * <code>CURRENCY_KPW = 408;</code>
     */
    CURRENCY_KPW(408),
    /**
     * <code>CURRENCY_KRW = 410;</code>
     */
    CURRENCY_KRW(410),
    /**
     * <code>CURRENCY_KWD = 414;</code>
     */
    CURRENCY_KWD(414),
    /**
     * <code>CURRENCY_KGS = 417;</code>
     */
    CURRENCY_KGS(417),
    /**
     * <code>CURRENCY_LAK = 418;</code>
     */
    CURRENCY_LAK(418),
    /**
     * <code>CURRENCY_LBP = 422;</code>
     */
    CURRENCY_LBP(422),
    /**
     * <code>CURRENCY_LSL = 426;</code>
     */
    CURRENCY_LSL(426),
    /**
     * <code>CURRENCY_LRD = 430;</code>
     */
    CURRENCY_LRD(430),
    /**
     * <code>CURRENCY_LYD = 434;</code>
     */
    CURRENCY_LYD(434),
    /**
     * <code>CURRENCY_LTL = 440;</code>
     */
    CURRENCY_LTL(440),
    /**
     * <code>CURRENCY_MOP = 446;</code>
     */
    CURRENCY_MOP(446),
    /**
     * <code>CURRENCY_MWK = 454;</code>
     */
    CURRENCY_MWK(454),
    /**
     * <code>CURRENCY_MYR = 458;</code>
     */
    CURRENCY_MYR(458),
    /**
     * <code>CURRENCY_MVR = 462;</code>
     */
    CURRENCY_MVR(462),
    /**
     * <code>CURRENCY_MRO = 478;</code>
     */
    CURRENCY_MRO(478),
    /**
     * <code>CURRENCY_MUR = 480;</code>
     */
    CURRENCY_MUR(480),
    /**
     * <code>CURRENCY_MXN = 484;</code>
     */
    CURRENCY_MXN(484),
    /**
     * <code>CURRENCY_MNT = 496;</code>
     */
    CURRENCY_MNT(496),
    /**
     * <code>CURRENCY_MDL = 498;</code>
     */
    CURRENCY_MDL(498),
    /**
     * <code>CURRENCY_MAD = 504;</code>
     */
    CURRENCY_MAD(504),
    /**
     * <code>CURRENCY_OMR = 512;</code>
     */
    CURRENCY_OMR(512),
    /**
     * <code>CURRENCY_NAD = 516;</code>
     */
    CURRENCY_NAD(516),
    /**
     * <code>CURRENCY_NPR = 524;</code>
     */
    CURRENCY_NPR(524),
    /**
     * <code>CURRENCY_ANG = 532;</code>
     */
    CURRENCY_ANG(532),
    /**
     * <code>CURRENCY_AWG = 533;</code>
     */
    CURRENCY_AWG(533),
    /**
     * <code>CURRENCY_VUV = 548;</code>
     */
    CURRENCY_VUV(548),
    /**
     * <code>CURRENCY_NZD = 554;</code>
     */
    CURRENCY_NZD(554),
    /**
     * <code>CURRENCY_NIO = 558;</code>
     */
    CURRENCY_NIO(558),
    /**
     * <code>CURRENCY_NGN = 566;</code>
     */
    CURRENCY_NGN(566),
    /**
     * <code>CURRENCY_NOK = 578;</code>
     */
    CURRENCY_NOK(578),
    /**
     * <code>CURRENCY_PKR = 586;</code>
     */
    CURRENCY_PKR(586),
    /**
     * <code>CURRENCY_PAB = 590;</code>
     */
    CURRENCY_PAB(590),
    /**
     * <code>CURRENCY_PGK = 598;</code>
     */
    CURRENCY_PGK(598),
    /**
     * <code>CURRENCY_PYG = 600;</code>
     */
    CURRENCY_PYG(600),
    /**
     * <code>CURRENCY_PEN = 604;</code>
     */
    CURRENCY_PEN(604),
    /**
     * <code>CURRENCY_PHP = 608;</code>
     */
    CURRENCY_PHP(608),
    /**
     * <code>CURRENCY_QAR = 634;</code>
     */
    CURRENCY_QAR(634),
    /**
     * <code>CURRENCY_RUB = 643;</code>
     */
    CURRENCY_RUB(643),
    /**
     * <code>CURRENCY_RWF = 646;</code>
     */
    CURRENCY_RWF(646),
    /**
     * <code>CURRENCY_SHP = 654;</code>
     */
    CURRENCY_SHP(654),
    /**
     * <code>CURRENCY_STD = 678;</code>
     */
    CURRENCY_STD(678),
    /**
     * <code>CURRENCY_SAR = 682;</code>
     */
    CURRENCY_SAR(682),
    /**
     * <code>CURRENCY_SCR = 690;</code>
     */
    CURRENCY_SCR(690),
    /**
     * <code>CURRENCY_SLL = 694;</code>
     */
    CURRENCY_SLL(694),
    /**
     * <code>CURRENCY_SGD = 702;</code>
     */
    CURRENCY_SGD(702),
    /**
     * <code>CURRENCY_VND = 704;</code>
     */
    CURRENCY_VND(704),
    /**
     * <code>CURRENCY_SOS = 706;</code>
     */
    CURRENCY_SOS(706),
    /**
     * <code>CURRENCY_ZAR = 710;</code>
     */
    CURRENCY_ZAR(710),
    /**
     * <code>CURRENCY_SSP = 728;</code>
     */
    CURRENCY_SSP(728),
    /**
     * <code>CURRENCY_SZL = 748;</code>
     */
    CURRENCY_SZL(748),
    /**
     * <code>CURRENCY_SEK = 752;</code>
     */
    CURRENCY_SEK(752),
    /**
     * <code>CURRENCY_CHF = 756;</code>
     */
    CURRENCY_CHF(756),
    /**
     * <code>CURRENCY_SYP = 760;</code>
     */
    CURRENCY_SYP(760),
    /**
     * <code>CURRENCY_THB = 764;</code>
     */
    CURRENCY_THB(764),
    /**
     * <code>CURRENCY_TOP = 776;</code>
     */
    CURRENCY_TOP(776),
    /**
     * <code>CURRENCY_TTD = 780;</code>
     */
    CURRENCY_TTD(780),
    /**
     * <code>CURRENCY_AED = 784;</code>
     */
    CURRENCY_AED(784),
    /**
     * <code>CURRENCY_TND = 788;</code>
     */
    CURRENCY_TND(788),
    /**
     * <code>CURRENCY_UGX = 800;</code>
     */
    CURRENCY_UGX(800),
    /**
     * <code>CURRENCY_MKD = 807;</code>
     */
    CURRENCY_MKD(807),
    /**
     * <code>CURRENCY_EGP = 818;</code>
     */
    CURRENCY_EGP(818),
    /**
     * <code>CURRENCY_GBP = 826;</code>
     */
    CURRENCY_GBP(826),
    /**
     * <code>CURRENCY_TZS = 834;</code>
     */
    CURRENCY_TZS(834),
    /**
     * <code>CURRENCY_USD = 840;</code>
     */
    CURRENCY_USD(840),
    /**
     * <code>CURRENCY_UYU = 858;</code>
     */
    CURRENCY_UYU(858),
    /**
     * <code>CURRENCY_UZS = 860;</code>
     */
    CURRENCY_UZS(860),
    /**
     * <code>CURRENCY_WST = 882;</code>
     */
    CURRENCY_WST(882),
    /**
     * <code>CURRENCY_YER = 886;</code>
     */
    CURRENCY_YER(886),
    /**
     * <code>CURRENCY_TWD = 901;</code>
     */
    CURRENCY_TWD(901),
    /**
     * <code>CURRENCY_CUC = 931;</code>
     */
    CURRENCY_CUC(931),
    /**
     * <code>CURRENCY_ZWL = 932;</code>
     */
    CURRENCY_ZWL(932),
    /**
     * <code>CURRENCY_TMT = 934;</code>
     */
    CURRENCY_TMT(934),
    /**
     * <code>CURRENCY_GHS = 936;</code>
     */
    CURRENCY_GHS(936),
    /**
     * <code>CURRENCY_VEF = 937;</code>
     */
    CURRENCY_VEF(937),
    /**
     * <code>CURRENCY_SDG = 938;</code>
     */
    CURRENCY_SDG(938),
    /**
     * <code>CURRENCY_UYI = 940;</code>
     */
    CURRENCY_UYI(940),
    /**
     * <code>CURRENCY_RSD = 941;</code>
     */
    CURRENCY_RSD(941),
    /**
     * <code>CURRENCY_MZN = 943;</code>
     */
    CURRENCY_MZN(943),
    /**
     * <code>CURRENCY_AZN = 944;</code>
     */
    CURRENCY_AZN(944),
    /**
     * <code>CURRENCY_RON = 946;</code>
     */
    CURRENCY_RON(946),
    /**
     * <code>CURRENCY_CHE = 947;</code>
     */
    CURRENCY_CHE(947),
    /**
     * <code>CURRENCY_CHW = 948;</code>
     */
    CURRENCY_CHW(948),
    /**
     * <code>CURRENCY_TRY = 949;</code>
     */
    CURRENCY_TRY(949),
    /**
     * <code>CURRENCY_XAF = 950;</code>
     */
    CURRENCY_XAF(950),
    /**
     * <code>CURRENCY_XCD = 951;</code>
     */
    CURRENCY_XCD(951),
    /**
     * <code>CURRENCY_XOF = 952;</code>
     */
    CURRENCY_XOF(952),
    /**
     * <code>CURRENCY_XPF = 953;</code>
     */
    CURRENCY_XPF(953),
    /**
     * <code>CURRENCY_XBA = 955;</code>
     */
    CURRENCY_XBA(955),
    /**
     * <code>CURRENCY_XBB = 956;</code>
     */
    CURRENCY_XBB(956),
    /**
     * <code>CURRENCY_XBC = 957;</code>
     */
    CURRENCY_XBC(957),
    /**
     * <code>CURRENCY_XBD = 958;</code>
     */
    CURRENCY_XBD(958),
    /**
     * <code>CURRENCY_XAU = 959;</code>
     */
    CURRENCY_XAU(959),
    /**
     * <code>CURRENCY_XDR = 960;</code>
     */
    CURRENCY_XDR(960),
    /**
     * <code>CURRENCY_XAG = 961;</code>
     */
    CURRENCY_XAG(961),
    /**
     * <code>CURRENCY_XPT = 962;</code>
     */
    CURRENCY_XPT(962),
    /**
     * <pre>
     * Codes specifically reserved for testing purposes
     * </pre>
     *
     * <code>CURRENCY_XTS = 963;</code>
     */
    CURRENCY_XTS(963),
    /**
     * <code>CURRENCY_XPD = 964;</code>
     */
    CURRENCY_XPD(964),
    /**
     * <code>CURRENCY_XUA = 965;</code>
     */
    CURRENCY_XUA(965),
    /**
     * <code>CURRENCY_ZMW = 967;</code>
     */
    CURRENCY_ZMW(967),
    /**
     * <code>CURRENCY_SRD = 968;</code>
     */
    CURRENCY_SRD(968),
    /**
     * <code>CURRENCY_MGA = 969;</code>
     */
    CURRENCY_MGA(969),
    /**
     * <code>CURRENCY_COU = 970;</code>
     */
    CURRENCY_COU(970),
    /**
     * <code>CURRENCY_AFN = 971;</code>
     */
    CURRENCY_AFN(971),
    /**
     * <code>CURRENCY_TJS = 972;</code>
     */
    CURRENCY_TJS(972),
    /**
     * <code>CURRENCY_AOA = 973;</code>
     */
    CURRENCY_AOA(973),
    /**
     * <code>CURRENCY_BYR = 974;</code>
     */
    CURRENCY_BYR(974),
    /**
     * <code>CURRENCY_BGN = 975;</code>
     */
    CURRENCY_BGN(975),
    /**
     * <code>CURRENCY_CDF = 976;</code>
     */
    CURRENCY_CDF(976),
    /**
     * <code>CURRENCY_BAM = 977;</code>
     */
    CURRENCY_BAM(977),
    /**
     * <code>CURRENCY_EUR = 978;</code>
     */
    CURRENCY_EUR(978),
    /**
     * <code>CURRENCY_MXV = 979;</code>
     */
    CURRENCY_MXV(979),
    /**
     * <code>CURRENCY_UAH = 980;</code>
     */
    CURRENCY_UAH(980),
    /**
     * <code>CURRENCY_GEL = 981;</code>
     */
    CURRENCY_GEL(981),
    /**
     * <code>CURRENCY_BOV = 984;</code>
     */
    CURRENCY_BOV(984),
    /**
     * <code>CURRENCY_PLN = 985;</code>
     */
    CURRENCY_PLN(985),
    /**
     * <code>CURRENCY_BRL = 986;</code>
     */
    CURRENCY_BRL(986),
    /**
     * <code>CURRENCY_CLF = 990;</code>
     */
    CURRENCY_CLF(990),
    /**
     * <code>CURRENCY_XSU = 994;</code>
     */
    CURRENCY_XSU(994),
    /**
     * <code>CURRENCY_USN = 997;</code>
     */
    CURRENCY_USN(997),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 33,
        /* patch= */ 0,
        /* suffix= */ "",
        "Currency");
    }
    /**
     * <pre>
     * XXX = 999; // Changed to 0 because proto3 requires the default to be 0
     * </pre>
     *
     * <code>CURRENCY_UNSPECIFIED = 0;</code>
     */
    public static final int CURRENCY_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Stands for Albania, not all ;-)
     * </pre>
     *
     * <code>CURRENCY_ALL = 8;</code>
     */
    public static final int CURRENCY_ALL_VALUE = 8;
    /**
     * <code>CURRENCY_DZD = 12;</code>
     */
    public static final int CURRENCY_DZD_VALUE = 12;
    /**
     * <code>CURRENCY_ARS = 32;</code>
     */
    public static final int CURRENCY_ARS_VALUE = 32;
    /**
     * <code>CURRENCY_AUD = 36;</code>
     */
    public static final int CURRENCY_AUD_VALUE = 36;
    /**
     * <code>CURRENCY_BSD = 44;</code>
     */
    public static final int CURRENCY_BSD_VALUE = 44;
    /**
     * <code>CURRENCY_BHD = 48;</code>
     */
    public static final int CURRENCY_BHD_VALUE = 48;
    /**
     * <code>CURRENCY_BDT = 50;</code>
     */
    public static final int CURRENCY_BDT_VALUE = 50;
    /**
     * <code>CURRENCY_AMD = 51;</code>
     */
    public static final int CURRENCY_AMD_VALUE = 51;
    /**
     * <code>CURRENCY_BBD = 52;</code>
     */
    public static final int CURRENCY_BBD_VALUE = 52;
    /**
     * <code>CURRENCY_BMD = 60;</code>
     */
    public static final int CURRENCY_BMD_VALUE = 60;
    /**
     * <code>CURRENCY_BTN = 64;</code>
     */
    public static final int CURRENCY_BTN_VALUE = 64;
    /**
     * <code>CURRENCY_BOB = 68;</code>
     */
    public static final int CURRENCY_BOB_VALUE = 68;
    /**
     * <code>CURRENCY_BWP = 72;</code>
     */
    public static final int CURRENCY_BWP_VALUE = 72;
    /**
     * <code>CURRENCY_BZD = 84;</code>
     */
    public static final int CURRENCY_BZD_VALUE = 84;
    /**
     * <code>CURRENCY_SBD = 90;</code>
     */
    public static final int CURRENCY_SBD_VALUE = 90;
    /**
     * <code>CURRENCY_BND = 96;</code>
     */
    public static final int CURRENCY_BND_VALUE = 96;
    /**
     * <code>CURRENCY_MMK = 104;</code>
     */
    public static final int CURRENCY_MMK_VALUE = 104;
    /**
     * <code>CURRENCY_BIF = 108;</code>
     */
    public static final int CURRENCY_BIF_VALUE = 108;
    /**
     * <code>CURRENCY_KHR = 116;</code>
     */
    public static final int CURRENCY_KHR_VALUE = 116;
    /**
     * <code>CURRENCY_CAD = 124;</code>
     */
    public static final int CURRENCY_CAD_VALUE = 124;
    /**
     * <code>CURRENCY_CVE = 132;</code>
     */
    public static final int CURRENCY_CVE_VALUE = 132;
    /**
     * <code>CURRENCY_KYD = 136;</code>
     */
    public static final int CURRENCY_KYD_VALUE = 136;
    /**
     * <code>CURRENCY_LKR = 144;</code>
     */
    public static final int CURRENCY_LKR_VALUE = 144;
    /**
     * <code>CURRENCY_CLP = 152;</code>
     */
    public static final int CURRENCY_CLP_VALUE = 152;
    /**
     * <code>CURRENCY_CNY = 156;</code>
     */
    public static final int CURRENCY_CNY_VALUE = 156;
    /**
     * <code>CURRENCY_COP = 170;</code>
     */
    public static final int CURRENCY_COP_VALUE = 170;
    /**
     * <code>CURRENCY_KMF = 174;</code>
     */
    public static final int CURRENCY_KMF_VALUE = 174;
    /**
     * <code>CURRENCY_CRC = 188;</code>
     */
    public static final int CURRENCY_CRC_VALUE = 188;
    /**
     * <code>CURRENCY_HRK = 191;</code>
     */
    public static final int CURRENCY_HRK_VALUE = 191;
    /**
     * <code>CURRENCY_CUP = 192;</code>
     */
    public static final int CURRENCY_CUP_VALUE = 192;
    /**
     * <code>CURRENCY_CZK = 203;</code>
     */
    public static final int CURRENCY_CZK_VALUE = 203;
    /**
     * <code>CURRENCY_DKK = 208;</code>
     */
    public static final int CURRENCY_DKK_VALUE = 208;
    /**
     * <code>CURRENCY_DOP = 214;</code>
     */
    public static final int CURRENCY_DOP_VALUE = 214;
    /**
     * <code>CURRENCY_SVC = 222;</code>
     */
    public static final int CURRENCY_SVC_VALUE = 222;
    /**
     * <code>CURRENCY_ETB = 230;</code>
     */
    public static final int CURRENCY_ETB_VALUE = 230;
    /**
     * <code>CURRENCY_ERN = 232;</code>
     */
    public static final int CURRENCY_ERN_VALUE = 232;
    /**
     * <code>CURRENCY_FKP = 238;</code>
     */
    public static final int CURRENCY_FKP_VALUE = 238;
    /**
     * <code>CURRENCY_FJD = 242;</code>
     */
    public static final int CURRENCY_FJD_VALUE = 242;
    /**
     * <code>CURRENCY_DJF = 262;</code>
     */
    public static final int CURRENCY_DJF_VALUE = 262;
    /**
     * <code>CURRENCY_GMD = 270;</code>
     */
    public static final int CURRENCY_GMD_VALUE = 270;
    /**
     * <code>CURRENCY_GIP = 292;</code>
     */
    public static final int CURRENCY_GIP_VALUE = 292;
    /**
     * <code>CURRENCY_GTQ = 320;</code>
     */
    public static final int CURRENCY_GTQ_VALUE = 320;
    /**
     * <code>CURRENCY_GNF = 324;</code>
     */
    public static final int CURRENCY_GNF_VALUE = 324;
    /**
     * <code>CURRENCY_GYD = 328;</code>
     */
    public static final int CURRENCY_GYD_VALUE = 328;
    /**
     * <code>CURRENCY_HTG = 332;</code>
     */
    public static final int CURRENCY_HTG_VALUE = 332;
    /**
     * <code>CURRENCY_HNL = 340;</code>
     */
    public static final int CURRENCY_HNL_VALUE = 340;
    /**
     * <code>CURRENCY_HKD = 344;</code>
     */
    public static final int CURRENCY_HKD_VALUE = 344;
    /**
     * <code>CURRENCY_HUF = 348;</code>
     */
    public static final int CURRENCY_HUF_VALUE = 348;
    /**
     * <code>CURRENCY_ISK = 352;</code>
     */
    public static final int CURRENCY_ISK_VALUE = 352;
    /**
     * <code>CURRENCY_INR = 356;</code>
     */
    public static final int CURRENCY_INR_VALUE = 356;
    /**
     * <code>CURRENCY_IDR = 360;</code>
     */
    public static final int CURRENCY_IDR_VALUE = 360;
    /**
     * <code>CURRENCY_IRR = 364;</code>
     */
    public static final int CURRENCY_IRR_VALUE = 364;
    /**
     * <code>CURRENCY_IQD = 368;</code>
     */
    public static final int CURRENCY_IQD_VALUE = 368;
    /**
     * <code>CURRENCY_ILS = 376;</code>
     */
    public static final int CURRENCY_ILS_VALUE = 376;
    /**
     * <code>CURRENCY_JMD = 388;</code>
     */
    public static final int CURRENCY_JMD_VALUE = 388;
    /**
     * <code>CURRENCY_JPY = 392;</code>
     */
    public static final int CURRENCY_JPY_VALUE = 392;
    /**
     * <code>CURRENCY_KZT = 398;</code>
     */
    public static final int CURRENCY_KZT_VALUE = 398;
    /**
     * <code>CURRENCY_JOD = 400;</code>
     */
    public static final int CURRENCY_JOD_VALUE = 400;
    /**
     * <code>CURRENCY_KES = 404;</code>
     */
    public static final int CURRENCY_KES_VALUE = 404;
    /**
     * <code>CURRENCY_KPW = 408;</code>
     */
    public static final int CURRENCY_KPW_VALUE = 408;
    /**
     * <code>CURRENCY_KRW = 410;</code>
     */
    public static final int CURRENCY_KRW_VALUE = 410;
    /**
     * <code>CURRENCY_KWD = 414;</code>
     */
    public static final int CURRENCY_KWD_VALUE = 414;
    /**
     * <code>CURRENCY_KGS = 417;</code>
     */
    public static final int CURRENCY_KGS_VALUE = 417;
    /**
     * <code>CURRENCY_LAK = 418;</code>
     */
    public static final int CURRENCY_LAK_VALUE = 418;
    /**
     * <code>CURRENCY_LBP = 422;</code>
     */
    public static final int CURRENCY_LBP_VALUE = 422;
    /**
     * <code>CURRENCY_LSL = 426;</code>
     */
    public static final int CURRENCY_LSL_VALUE = 426;
    /**
     * <code>CURRENCY_LRD = 430;</code>
     */
    public static final int CURRENCY_LRD_VALUE = 430;
    /**
     * <code>CURRENCY_LYD = 434;</code>
     */
    public static final int CURRENCY_LYD_VALUE = 434;
    /**
     * <code>CURRENCY_LTL = 440;</code>
     */
    public static final int CURRENCY_LTL_VALUE = 440;
    /**
     * <code>CURRENCY_MOP = 446;</code>
     */
    public static final int CURRENCY_MOP_VALUE = 446;
    /**
     * <code>CURRENCY_MWK = 454;</code>
     */
    public static final int CURRENCY_MWK_VALUE = 454;
    /**
     * <code>CURRENCY_MYR = 458;</code>
     */
    public static final int CURRENCY_MYR_VALUE = 458;
    /**
     * <code>CURRENCY_MVR = 462;</code>
     */
    public static final int CURRENCY_MVR_VALUE = 462;
    /**
     * <code>CURRENCY_MRO = 478;</code>
     */
    public static final int CURRENCY_MRO_VALUE = 478;
    /**
     * <code>CURRENCY_MUR = 480;</code>
     */
    public static final int CURRENCY_MUR_VALUE = 480;
    /**
     * <code>CURRENCY_MXN = 484;</code>
     */
    public static final int CURRENCY_MXN_VALUE = 484;
    /**
     * <code>CURRENCY_MNT = 496;</code>
     */
    public static final int CURRENCY_MNT_VALUE = 496;
    /**
     * <code>CURRENCY_MDL = 498;</code>
     */
    public static final int CURRENCY_MDL_VALUE = 498;
    /**
     * <code>CURRENCY_MAD = 504;</code>
     */
    public static final int CURRENCY_MAD_VALUE = 504;
    /**
     * <code>CURRENCY_OMR = 512;</code>
     */
    public static final int CURRENCY_OMR_VALUE = 512;
    /**
     * <code>CURRENCY_NAD = 516;</code>
     */
    public static final int CURRENCY_NAD_VALUE = 516;
    /**
     * <code>CURRENCY_NPR = 524;</code>
     */
    public static final int CURRENCY_NPR_VALUE = 524;
    /**
     * <code>CURRENCY_ANG = 532;</code>
     */
    public static final int CURRENCY_ANG_VALUE = 532;
    /**
     * <code>CURRENCY_AWG = 533;</code>
     */
    public static final int CURRENCY_AWG_VALUE = 533;
    /**
     * <code>CURRENCY_VUV = 548;</code>
     */
    public static final int CURRENCY_VUV_VALUE = 548;
    /**
     * <code>CURRENCY_NZD = 554;</code>
     */
    public static final int CURRENCY_NZD_VALUE = 554;
    /**
     * <code>CURRENCY_NIO = 558;</code>
     */
    public static final int CURRENCY_NIO_VALUE = 558;
    /**
     * <code>CURRENCY_NGN = 566;</code>
     */
    public static final int CURRENCY_NGN_VALUE = 566;
    /**
     * <code>CURRENCY_NOK = 578;</code>
     */
    public static final int CURRENCY_NOK_VALUE = 578;
    /**
     * <code>CURRENCY_PKR = 586;</code>
     */
    public static final int CURRENCY_PKR_VALUE = 586;
    /**
     * <code>CURRENCY_PAB = 590;</code>
     */
    public static final int CURRENCY_PAB_VALUE = 590;
    /**
     * <code>CURRENCY_PGK = 598;</code>
     */
    public static final int CURRENCY_PGK_VALUE = 598;
    /**
     * <code>CURRENCY_PYG = 600;</code>
     */
    public static final int CURRENCY_PYG_VALUE = 600;
    /**
     * <code>CURRENCY_PEN = 604;</code>
     */
    public static final int CURRENCY_PEN_VALUE = 604;
    /**
     * <code>CURRENCY_PHP = 608;</code>
     */
    public static final int CURRENCY_PHP_VALUE = 608;
    /**
     * <code>CURRENCY_QAR = 634;</code>
     */
    public static final int CURRENCY_QAR_VALUE = 634;
    /**
     * <code>CURRENCY_RUB = 643;</code>
     */
    public static final int CURRENCY_RUB_VALUE = 643;
    /**
     * <code>CURRENCY_RWF = 646;</code>
     */
    public static final int CURRENCY_RWF_VALUE = 646;
    /**
     * <code>CURRENCY_SHP = 654;</code>
     */
    public static final int CURRENCY_SHP_VALUE = 654;
    /**
     * <code>CURRENCY_STD = 678;</code>
     */
    public static final int CURRENCY_STD_VALUE = 678;
    /**
     * <code>CURRENCY_SAR = 682;</code>
     */
    public static final int CURRENCY_SAR_VALUE = 682;
    /**
     * <code>CURRENCY_SCR = 690;</code>
     */
    public static final int CURRENCY_SCR_VALUE = 690;
    /**
     * <code>CURRENCY_SLL = 694;</code>
     */
    public static final int CURRENCY_SLL_VALUE = 694;
    /**
     * <code>CURRENCY_SGD = 702;</code>
     */
    public static final int CURRENCY_SGD_VALUE = 702;
    /**
     * <code>CURRENCY_VND = 704;</code>
     */
    public static final int CURRENCY_VND_VALUE = 704;
    /**
     * <code>CURRENCY_SOS = 706;</code>
     */
    public static final int CURRENCY_SOS_VALUE = 706;
    /**
     * <code>CURRENCY_ZAR = 710;</code>
     */
    public static final int CURRENCY_ZAR_VALUE = 710;
    /**
     * <code>CURRENCY_SSP = 728;</code>
     */
    public static final int CURRENCY_SSP_VALUE = 728;
    /**
     * <code>CURRENCY_SZL = 748;</code>
     */
    public static final int CURRENCY_SZL_VALUE = 748;
    /**
     * <code>CURRENCY_SEK = 752;</code>
     */
    public static final int CURRENCY_SEK_VALUE = 752;
    /**
     * <code>CURRENCY_CHF = 756;</code>
     */
    public static final int CURRENCY_CHF_VALUE = 756;
    /**
     * <code>CURRENCY_SYP = 760;</code>
     */
    public static final int CURRENCY_SYP_VALUE = 760;
    /**
     * <code>CURRENCY_THB = 764;</code>
     */
    public static final int CURRENCY_THB_VALUE = 764;
    /**
     * <code>CURRENCY_TOP = 776;</code>
     */
    public static final int CURRENCY_TOP_VALUE = 776;
    /**
     * <code>CURRENCY_TTD = 780;</code>
     */
    public static final int CURRENCY_TTD_VALUE = 780;
    /**
     * <code>CURRENCY_AED = 784;</code>
     */
    public static final int CURRENCY_AED_VALUE = 784;
    /**
     * <code>CURRENCY_TND = 788;</code>
     */
    public static final int CURRENCY_TND_VALUE = 788;
    /**
     * <code>CURRENCY_UGX = 800;</code>
     */
    public static final int CURRENCY_UGX_VALUE = 800;
    /**
     * <code>CURRENCY_MKD = 807;</code>
     */
    public static final int CURRENCY_MKD_VALUE = 807;
    /**
     * <code>CURRENCY_EGP = 818;</code>
     */
    public static final int CURRENCY_EGP_VALUE = 818;
    /**
     * <code>CURRENCY_GBP = 826;</code>
     */
    public static final int CURRENCY_GBP_VALUE = 826;
    /**
     * <code>CURRENCY_TZS = 834;</code>
     */
    public static final int CURRENCY_TZS_VALUE = 834;
    /**
     * <code>CURRENCY_USD = 840;</code>
     */
    public static final int CURRENCY_USD_VALUE = 840;
    /**
     * <code>CURRENCY_UYU = 858;</code>
     */
    public static final int CURRENCY_UYU_VALUE = 858;
    /**
     * <code>CURRENCY_UZS = 860;</code>
     */
    public static final int CURRENCY_UZS_VALUE = 860;
    /**
     * <code>CURRENCY_WST = 882;</code>
     */
    public static final int CURRENCY_WST_VALUE = 882;
    /**
     * <code>CURRENCY_YER = 886;</code>
     */
    public static final int CURRENCY_YER_VALUE = 886;
    /**
     * <code>CURRENCY_TWD = 901;</code>
     */
    public static final int CURRENCY_TWD_VALUE = 901;
    /**
     * <code>CURRENCY_CUC = 931;</code>
     */
    public static final int CURRENCY_CUC_VALUE = 931;
    /**
     * <code>CURRENCY_ZWL = 932;</code>
     */
    public static final int CURRENCY_ZWL_VALUE = 932;
    /**
     * <code>CURRENCY_TMT = 934;</code>
     */
    public static final int CURRENCY_TMT_VALUE = 934;
    /**
     * <code>CURRENCY_GHS = 936;</code>
     */
    public static final int CURRENCY_GHS_VALUE = 936;
    /**
     * <code>CURRENCY_VEF = 937;</code>
     */
    public static final int CURRENCY_VEF_VALUE = 937;
    /**
     * <code>CURRENCY_SDG = 938;</code>
     */
    public static final int CURRENCY_SDG_VALUE = 938;
    /**
     * <code>CURRENCY_UYI = 940;</code>
     */
    public static final int CURRENCY_UYI_VALUE = 940;
    /**
     * <code>CURRENCY_RSD = 941;</code>
     */
    public static final int CURRENCY_RSD_VALUE = 941;
    /**
     * <code>CURRENCY_MZN = 943;</code>
     */
    public static final int CURRENCY_MZN_VALUE = 943;
    /**
     * <code>CURRENCY_AZN = 944;</code>
     */
    public static final int CURRENCY_AZN_VALUE = 944;
    /**
     * <code>CURRENCY_RON = 946;</code>
     */
    public static final int CURRENCY_RON_VALUE = 946;
    /**
     * <code>CURRENCY_CHE = 947;</code>
     */
    public static final int CURRENCY_CHE_VALUE = 947;
    /**
     * <code>CURRENCY_CHW = 948;</code>
     */
    public static final int CURRENCY_CHW_VALUE = 948;
    /**
     * <code>CURRENCY_TRY = 949;</code>
     */
    public static final int CURRENCY_TRY_VALUE = 949;
    /**
     * <code>CURRENCY_XAF = 950;</code>
     */
    public static final int CURRENCY_XAF_VALUE = 950;
    /**
     * <code>CURRENCY_XCD = 951;</code>
     */
    public static final int CURRENCY_XCD_VALUE = 951;
    /**
     * <code>CURRENCY_XOF = 952;</code>
     */
    public static final int CURRENCY_XOF_VALUE = 952;
    /**
     * <code>CURRENCY_XPF = 953;</code>
     */
    public static final int CURRENCY_XPF_VALUE = 953;
    /**
     * <code>CURRENCY_XBA = 955;</code>
     */
    public static final int CURRENCY_XBA_VALUE = 955;
    /**
     * <code>CURRENCY_XBB = 956;</code>
     */
    public static final int CURRENCY_XBB_VALUE = 956;
    /**
     * <code>CURRENCY_XBC = 957;</code>
     */
    public static final int CURRENCY_XBC_VALUE = 957;
    /**
     * <code>CURRENCY_XBD = 958;</code>
     */
    public static final int CURRENCY_XBD_VALUE = 958;
    /**
     * <code>CURRENCY_XAU = 959;</code>
     */
    public static final int CURRENCY_XAU_VALUE = 959;
    /**
     * <code>CURRENCY_XDR = 960;</code>
     */
    public static final int CURRENCY_XDR_VALUE = 960;
    /**
     * <code>CURRENCY_XAG = 961;</code>
     */
    public static final int CURRENCY_XAG_VALUE = 961;
    /**
     * <code>CURRENCY_XPT = 962;</code>
     */
    public static final int CURRENCY_XPT_VALUE = 962;
    /**
     * <pre>
     * Codes specifically reserved for testing purposes
     * </pre>
     *
     * <code>CURRENCY_XTS = 963;</code>
     */
    public static final int CURRENCY_XTS_VALUE = 963;
    /**
     * <code>CURRENCY_XPD = 964;</code>
     */
    public static final int CURRENCY_XPD_VALUE = 964;
    /**
     * <code>CURRENCY_XUA = 965;</code>
     */
    public static final int CURRENCY_XUA_VALUE = 965;
    /**
     * <code>CURRENCY_ZMW = 967;</code>
     */
    public static final int CURRENCY_ZMW_VALUE = 967;
    /**
     * <code>CURRENCY_SRD = 968;</code>
     */
    public static final int CURRENCY_SRD_VALUE = 968;
    /**
     * <code>CURRENCY_MGA = 969;</code>
     */
    public static final int CURRENCY_MGA_VALUE = 969;
    /**
     * <code>CURRENCY_COU = 970;</code>
     */
    public static final int CURRENCY_COU_VALUE = 970;
    /**
     * <code>CURRENCY_AFN = 971;</code>
     */
    public static final int CURRENCY_AFN_VALUE = 971;
    /**
     * <code>CURRENCY_TJS = 972;</code>
     */
    public static final int CURRENCY_TJS_VALUE = 972;
    /**
     * <code>CURRENCY_AOA = 973;</code>
     */
    public static final int CURRENCY_AOA_VALUE = 973;
    /**
     * <code>CURRENCY_BYR = 974;</code>
     */
    public static final int CURRENCY_BYR_VALUE = 974;
    /**
     * <code>CURRENCY_BGN = 975;</code>
     */
    public static final int CURRENCY_BGN_VALUE = 975;
    /**
     * <code>CURRENCY_CDF = 976;</code>
     */
    public static final int CURRENCY_CDF_VALUE = 976;
    /**
     * <code>CURRENCY_BAM = 977;</code>
     */
    public static final int CURRENCY_BAM_VALUE = 977;
    /**
     * <code>CURRENCY_EUR = 978;</code>
     */
    public static final int CURRENCY_EUR_VALUE = 978;
    /**
     * <code>CURRENCY_MXV = 979;</code>
     */
    public static final int CURRENCY_MXV_VALUE = 979;
    /**
     * <code>CURRENCY_UAH = 980;</code>
     */
    public static final int CURRENCY_UAH_VALUE = 980;
    /**
     * <code>CURRENCY_GEL = 981;</code>
     */
    public static final int CURRENCY_GEL_VALUE = 981;
    /**
     * <code>CURRENCY_BOV = 984;</code>
     */
    public static final int CURRENCY_BOV_VALUE = 984;
    /**
     * <code>CURRENCY_PLN = 985;</code>
     */
    public static final int CURRENCY_PLN_VALUE = 985;
    /**
     * <code>CURRENCY_BRL = 986;</code>
     */
    public static final int CURRENCY_BRL_VALUE = 986;
    /**
     * <code>CURRENCY_CLF = 990;</code>
     */
    public static final int CURRENCY_CLF_VALUE = 990;
    /**
     * <code>CURRENCY_XSU = 994;</code>
     */
    public static final int CURRENCY_XSU_VALUE = 994;
    /**
     * <code>CURRENCY_USN = 997;</code>
     */
    public static final int CURRENCY_USN_VALUE = 997;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Currency valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Currency forNumber(int value) {
      switch (value) {
        case 0: return CURRENCY_UNSPECIFIED;
        case 8: return CURRENCY_ALL;
        case 12: return CURRENCY_DZD;
        case 32: return CURRENCY_ARS;
        case 36: return CURRENCY_AUD;
        case 44: return CURRENCY_BSD;
        case 48: return CURRENCY_BHD;
        case 50: return CURRENCY_BDT;
        case 51: return CURRENCY_AMD;
        case 52: return CURRENCY_BBD;
        case 60: return CURRENCY_BMD;
        case 64: return CURRENCY_BTN;
        case 68: return CURRENCY_BOB;
        case 72: return CURRENCY_BWP;
        case 84: return CURRENCY_BZD;
        case 90: return CURRENCY_SBD;
        case 96: return CURRENCY_BND;
        case 104: return CURRENCY_MMK;
        case 108: return CURRENCY_BIF;
        case 116: return CURRENCY_KHR;
        case 124: return CURRENCY_CAD;
        case 132: return CURRENCY_CVE;
        case 136: return CURRENCY_KYD;
        case 144: return CURRENCY_LKR;
        case 152: return CURRENCY_CLP;
        case 156: return CURRENCY_CNY;
        case 170: return CURRENCY_COP;
        case 174: return CURRENCY_KMF;
        case 188: return CURRENCY_CRC;
        case 191: return CURRENCY_HRK;
        case 192: return CURRENCY_CUP;
        case 203: return CURRENCY_CZK;
        case 208: return CURRENCY_DKK;
        case 214: return CURRENCY_DOP;
        case 222: return CURRENCY_SVC;
        case 230: return CURRENCY_ETB;
        case 232: return CURRENCY_ERN;
        case 238: return CURRENCY_FKP;
        case 242: return CURRENCY_FJD;
        case 262: return CURRENCY_DJF;
        case 270: return CURRENCY_GMD;
        case 292: return CURRENCY_GIP;
        case 320: return CURRENCY_GTQ;
        case 324: return CURRENCY_GNF;
        case 328: return CURRENCY_GYD;
        case 332: return CURRENCY_HTG;
        case 340: return CURRENCY_HNL;
        case 344: return CURRENCY_HKD;
        case 348: return CURRENCY_HUF;
        case 352: return CURRENCY_ISK;
        case 356: return CURRENCY_INR;
        case 360: return CURRENCY_IDR;
        case 364: return CURRENCY_IRR;
        case 368: return CURRENCY_IQD;
        case 376: return CURRENCY_ILS;
        case 388: return CURRENCY_JMD;
        case 392: return CURRENCY_JPY;
        case 398: return CURRENCY_KZT;
        case 400: return CURRENCY_JOD;
        case 404: return CURRENCY_KES;
        case 408: return CURRENCY_KPW;
        case 410: return CURRENCY_KRW;
        case 414: return CURRENCY_KWD;
        case 417: return CURRENCY_KGS;
        case 418: return CURRENCY_LAK;
        case 422: return CURRENCY_LBP;
        case 426: return CURRENCY_LSL;
        case 430: return CURRENCY_LRD;
        case 434: return CURRENCY_LYD;
        case 440: return CURRENCY_LTL;
        case 446: return CURRENCY_MOP;
        case 454: return CURRENCY_MWK;
        case 458: return CURRENCY_MYR;
        case 462: return CURRENCY_MVR;
        case 478: return CURRENCY_MRO;
        case 480: return CURRENCY_MUR;
        case 484: return CURRENCY_MXN;
        case 496: return CURRENCY_MNT;
        case 498: return CURRENCY_MDL;
        case 504: return CURRENCY_MAD;
        case 512: return CURRENCY_OMR;
        case 516: return CURRENCY_NAD;
        case 524: return CURRENCY_NPR;
        case 532: return CURRENCY_ANG;
        case 533: return CURRENCY_AWG;
        case 548: return CURRENCY_VUV;
        case 554: return CURRENCY_NZD;
        case 558: return CURRENCY_NIO;
        case 566: return CURRENCY_NGN;
        case 578: return CURRENCY_NOK;
        case 586: return CURRENCY_PKR;
        case 590: return CURRENCY_PAB;
        case 598: return CURRENCY_PGK;
        case 600: return CURRENCY_PYG;
        case 604: return CURRENCY_PEN;
        case 608: return CURRENCY_PHP;
        case 634: return CURRENCY_QAR;
        case 643: return CURRENCY_RUB;
        case 646: return CURRENCY_RWF;
        case 654: return CURRENCY_SHP;
        case 678: return CURRENCY_STD;
        case 682: return CURRENCY_SAR;
        case 690: return CURRENCY_SCR;
        case 694: return CURRENCY_SLL;
        case 702: return CURRENCY_SGD;
        case 704: return CURRENCY_VND;
        case 706: return CURRENCY_SOS;
        case 710: return CURRENCY_ZAR;
        case 728: return CURRENCY_SSP;
        case 748: return CURRENCY_SZL;
        case 752: return CURRENCY_SEK;
        case 756: return CURRENCY_CHF;
        case 760: return CURRENCY_SYP;
        case 764: return CURRENCY_THB;
        case 776: return CURRENCY_TOP;
        case 780: return CURRENCY_TTD;
        case 784: return CURRENCY_AED;
        case 788: return CURRENCY_TND;
        case 800: return CURRENCY_UGX;
        case 807: return CURRENCY_MKD;
        case 818: return CURRENCY_EGP;
        case 826: return CURRENCY_GBP;
        case 834: return CURRENCY_TZS;
        case 840: return CURRENCY_USD;
        case 858: return CURRENCY_UYU;
        case 860: return CURRENCY_UZS;
        case 882: return CURRENCY_WST;
        case 886: return CURRENCY_YER;
        case 901: return CURRENCY_TWD;
        case 931: return CURRENCY_CUC;
        case 932: return CURRENCY_ZWL;
        case 934: return CURRENCY_TMT;
        case 936: return CURRENCY_GHS;
        case 937: return CURRENCY_VEF;
        case 938: return CURRENCY_SDG;
        case 940: return CURRENCY_UYI;
        case 941: return CURRENCY_RSD;
        case 943: return CURRENCY_MZN;
        case 944: return CURRENCY_AZN;
        case 946: return CURRENCY_RON;
        case 947: return CURRENCY_CHE;
        case 948: return CURRENCY_CHW;
        case 949: return CURRENCY_TRY;
        case 950: return CURRENCY_XAF;
        case 951: return CURRENCY_XCD;
        case 952: return CURRENCY_XOF;
        case 953: return CURRENCY_XPF;
        case 955: return CURRENCY_XBA;
        case 956: return CURRENCY_XBB;
        case 957: return CURRENCY_XBC;
        case 958: return CURRENCY_XBD;
        case 959: return CURRENCY_XAU;
        case 960: return CURRENCY_XDR;
        case 961: return CURRENCY_XAG;
        case 962: return CURRENCY_XPT;
        case 963: return CURRENCY_XTS;
        case 964: return CURRENCY_XPD;
        case 965: return CURRENCY_XUA;
        case 967: return CURRENCY_ZMW;
        case 968: return CURRENCY_SRD;
        case 969: return CURRENCY_MGA;
        case 970: return CURRENCY_COU;
        case 971: return CURRENCY_AFN;
        case 972: return CURRENCY_TJS;
        case 973: return CURRENCY_AOA;
        case 974: return CURRENCY_BYR;
        case 975: return CURRENCY_BGN;
        case 976: return CURRENCY_CDF;
        case 977: return CURRENCY_BAM;
        case 978: return CURRENCY_EUR;
        case 979: return CURRENCY_MXV;
        case 980: return CURRENCY_UAH;
        case 981: return CURRENCY_GEL;
        case 984: return CURRENCY_BOV;
        case 985: return CURRENCY_PLN;
        case 986: return CURRENCY_BRL;
        case 990: return CURRENCY_CLF;
        case 994: return CURRENCY_XSU;
        case 997: return CURRENCY_USN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Currency>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Currency> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Currency>() {
            public Currency findValueByNumber(int number) {
              return Currency.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return net.outbe.common.v1.CurrencyOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final Currency[] VALUES = values();

    public static Currency valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Currency(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:net.outbe.common.v1.Currency)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"net/outbe/common/v1/currency.proto\022\023ne" +
      "t.outbe.common.v1*\306\032\n\010Currency\022\030\n\024CURREN" +
      "CY_UNSPECIFIED\020\000\022\020\n\014CURRENCY_ALL\020\010\022\020\n\014CU" +
      "RRENCY_DZD\020\014\022\020\n\014CURRENCY_ARS\020 \022\020\n\014CURREN" +
      "CY_AUD\020$\022\020\n\014CURRENCY_BSD\020,\022\020\n\014CURRENCY_B" +
      "HD\0200\022\020\n\014CURRENCY_BDT\0202\022\020\n\014CURRENCY_AMD\0203" +
      "\022\020\n\014CURRENCY_BBD\0204\022\020\n\014CURRENCY_BMD\020<\022\020\n\014" +
      "CURRENCY_BTN\020@\022\020\n\014CURRENCY_BOB\020D\022\020\n\014CURR" +
      "ENCY_BWP\020H\022\020\n\014CURRENCY_BZD\020T\022\020\n\014CURRENCY" +
      "_SBD\020Z\022\020\n\014CURRENCY_BND\020`\022\020\n\014CURRENCY_MMK" +
      "\020h\022\020\n\014CURRENCY_BIF\020l\022\020\n\014CURRENCY_KHR\020t\022\020" +
      "\n\014CURRENCY_CAD\020|\022\021\n\014CURRENCY_CVE\020\204\001\022\021\n\014C" +
      "URRENCY_KYD\020\210\001\022\021\n\014CURRENCY_LKR\020\220\001\022\021\n\014CUR" +
      "RENCY_CLP\020\230\001\022\021\n\014CURRENCY_CNY\020\234\001\022\021\n\014CURRE" +
      "NCY_COP\020\252\001\022\021\n\014CURRENCY_KMF\020\256\001\022\021\n\014CURRENC" +
      "Y_CRC\020\274\001\022\021\n\014CURRENCY_HRK\020\277\001\022\021\n\014CURRENCY_" +
      "CUP\020\300\001\022\021\n\014CURRENCY_CZK\020\313\001\022\021\n\014CURRENCY_DK" +
      "K\020\320\001\022\021\n\014CURRENCY_DOP\020\326\001\022\021\n\014CURRENCY_SVC\020" +
      "\336\001\022\021\n\014CURRENCY_ETB\020\346\001\022\021\n\014CURRENCY_ERN\020\350\001" +
      "\022\021\n\014CURRENCY_FKP\020\356\001\022\021\n\014CURRENCY_FJD\020\362\001\022\021" +
      "\n\014CURRENCY_DJF\020\206\002\022\021\n\014CURRENCY_GMD\020\216\002\022\021\n\014" +
      "CURRENCY_GIP\020\244\002\022\021\n\014CURRENCY_GTQ\020\300\002\022\021\n\014CU" +
      "RRENCY_GNF\020\304\002\022\021\n\014CURRENCY_GYD\020\310\002\022\021\n\014CURR" +
      "ENCY_HTG\020\314\002\022\021\n\014CURRENCY_HNL\020\324\002\022\021\n\014CURREN" +
      "CY_HKD\020\330\002\022\021\n\014CURRENCY_HUF\020\334\002\022\021\n\014CURRENCY" +
      "_ISK\020\340\002\022\021\n\014CURRENCY_INR\020\344\002\022\021\n\014CURRENCY_I" +
      "DR\020\350\002\022\021\n\014CURRENCY_IRR\020\354\002\022\021\n\014CURRENCY_IQD" +
      "\020\360\002\022\021\n\014CURRENCY_ILS\020\370\002\022\021\n\014CURRENCY_JMD\020\204" +
      "\003\022\021\n\014CURRENCY_JPY\020\210\003\022\021\n\014CURRENCY_KZT\020\216\003\022" +
      "\021\n\014CURRENCY_JOD\020\220\003\022\021\n\014CURRENCY_KES\020\224\003\022\021\n" +
      "\014CURRENCY_KPW\020\230\003\022\021\n\014CURRENCY_KRW\020\232\003\022\021\n\014C" +
      "URRENCY_KWD\020\236\003\022\021\n\014CURRENCY_KGS\020\241\003\022\021\n\014CUR" +
      "RENCY_LAK\020\242\003\022\021\n\014CURRENCY_LBP\020\246\003\022\021\n\014CURRE" +
      "NCY_LSL\020\252\003\022\021\n\014CURRENCY_LRD\020\256\003\022\021\n\014CURRENC" +
      "Y_LYD\020\262\003\022\021\n\014CURRENCY_LTL\020\270\003\022\021\n\014CURRENCY_" +
      "MOP\020\276\003\022\021\n\014CURRENCY_MWK\020\306\003\022\021\n\014CURRENCY_MY" +
      "R\020\312\003\022\021\n\014CURRENCY_MVR\020\316\003\022\021\n\014CURRENCY_MRO\020" +
      "\336\003\022\021\n\014CURRENCY_MUR\020\340\003\022\021\n\014CURRENCY_MXN\020\344\003" +
      "\022\021\n\014CURRENCY_MNT\020\360\003\022\021\n\014CURRENCY_MDL\020\362\003\022\021" +
      "\n\014CURRENCY_MAD\020\370\003\022\021\n\014CURRENCY_OMR\020\200\004\022\021\n\014" +
      "CURRENCY_NAD\020\204\004\022\021\n\014CURRENCY_NPR\020\214\004\022\021\n\014CU" +
      "RRENCY_ANG\020\224\004\022\021\n\014CURRENCY_AWG\020\225\004\022\021\n\014CURR" +
      "ENCY_VUV\020\244\004\022\021\n\014CURRENCY_NZD\020\252\004\022\021\n\014CURREN" +
      "CY_NIO\020\256\004\022\021\n\014CURRENCY_NGN\020\266\004\022\021\n\014CURRENCY" +
      "_NOK\020\302\004\022\021\n\014CURRENCY_PKR\020\312\004\022\021\n\014CURRENCY_P" +
      "AB\020\316\004\022\021\n\014CURRENCY_PGK\020\326\004\022\021\n\014CURRENCY_PYG" +
      "\020\330\004\022\021\n\014CURRENCY_PEN\020\334\004\022\021\n\014CURRENCY_PHP\020\340" +
      "\004\022\021\n\014CURRENCY_QAR\020\372\004\022\021\n\014CURRENCY_RUB\020\203\005\022" +
      "\021\n\014CURRENCY_RWF\020\206\005\022\021\n\014CURRENCY_SHP\020\216\005\022\021\n" +
      "\014CURRENCY_STD\020\246\005\022\021\n\014CURRENCY_SAR\020\252\005\022\021\n\014C" +
      "URRENCY_SCR\020\262\005\022\021\n\014CURRENCY_SLL\020\266\005\022\021\n\014CUR" +
      "RENCY_SGD\020\276\005\022\021\n\014CURRENCY_VND\020\300\005\022\021\n\014CURRE" +
      "NCY_SOS\020\302\005\022\021\n\014CURRENCY_ZAR\020\306\005\022\021\n\014CURRENC" +
      "Y_SSP\020\330\005\022\021\n\014CURRENCY_SZL\020\354\005\022\021\n\014CURRENCY_" +
      "SEK\020\360\005\022\021\n\014CURRENCY_CHF\020\364\005\022\021\n\014CURRENCY_SY" +
      "P\020\370\005\022\021\n\014CURRENCY_THB\020\374\005\022\021\n\014CURRENCY_TOP\020" +
      "\210\006\022\021\n\014CURRENCY_TTD\020\214\006\022\021\n\014CURRENCY_AED\020\220\006" +
      "\022\021\n\014CURRENCY_TND\020\224\006\022\021\n\014CURRENCY_UGX\020\240\006\022\021" +
      "\n\014CURRENCY_MKD\020\247\006\022\021\n\014CURRENCY_EGP\020\262\006\022\021\n\014" +
      "CURRENCY_GBP\020\272\006\022\021\n\014CURRENCY_TZS\020\302\006\022\021\n\014CU" +
      "RRENCY_USD\020\310\006\022\021\n\014CURRENCY_UYU\020\332\006\022\021\n\014CURR" +
      "ENCY_UZS\020\334\006\022\021\n\014CURRENCY_WST\020\362\006\022\021\n\014CURREN" +
      "CY_YER\020\366\006\022\021\n\014CURRENCY_TWD\020\205\007\022\021\n\014CURRENCY" +
      "_CUC\020\243\007\022\021\n\014CURRENCY_ZWL\020\244\007\022\021\n\014CURRENCY_T" +
      "MT\020\246\007\022\021\n\014CURRENCY_GHS\020\250\007\022\021\n\014CURRENCY_VEF" +
      "\020\251\007\022\021\n\014CURRENCY_SDG\020\252\007\022\021\n\014CURRENCY_UYI\020\254" +
      "\007\022\021\n\014CURRENCY_RSD\020\255\007\022\021\n\014CURRENCY_MZN\020\257\007\022" +
      "\021\n\014CURRENCY_AZN\020\260\007\022\021\n\014CURRENCY_RON\020\262\007\022\021\n" +
      "\014CURRENCY_CHE\020\263\007\022\021\n\014CURRENCY_CHW\020\264\007\022\021\n\014C" +
      "URRENCY_TRY\020\265\007\022\021\n\014CURRENCY_XAF\020\266\007\022\021\n\014CUR" +
      "RENCY_XCD\020\267\007\022\021\n\014CURRENCY_XOF\020\270\007\022\021\n\014CURRE" +
      "NCY_XPF\020\271\007\022\021\n\014CURRENCY_XBA\020\273\007\022\021\n\014CURRENC" +
      "Y_XBB\020\274\007\022\021\n\014CURRENCY_XBC\020\275\007\022\021\n\014CURRENCY_" +
      "XBD\020\276\007\022\021\n\014CURRENCY_XAU\020\277\007\022\021\n\014CURRENCY_XD" +
      "R\020\300\007\022\021\n\014CURRENCY_XAG\020\301\007\022\021\n\014CURRENCY_XPT\020" +
      "\302\007\022\021\n\014CURRENCY_XTS\020\303\007\022\021\n\014CURRENCY_XPD\020\304\007" +
      "\022\021\n\014CURRENCY_XUA\020\305\007\022\021\n\014CURRENCY_ZMW\020\307\007\022\021" +
      "\n\014CURRENCY_SRD\020\310\007\022\021\n\014CURRENCY_MGA\020\311\007\022\021\n\014" +
      "CURRENCY_COU\020\312\007\022\021\n\014CURRENCY_AFN\020\313\007\022\021\n\014CU" +
      "RRENCY_TJS\020\314\007\022\021\n\014CURRENCY_AOA\020\315\007\022\021\n\014CURR" +
      "ENCY_BYR\020\316\007\022\021\n\014CURRENCY_BGN\020\317\007\022\021\n\014CURREN" +
      "CY_CDF\020\320\007\022\021\n\014CURRENCY_BAM\020\321\007\022\021\n\014CURRENCY" +
      "_EUR\020\322\007\022\021\n\014CURRENCY_MXV\020\323\007\022\021\n\014CURRENCY_U" +
      "AH\020\324\007\022\021\n\014CURRENCY_GEL\020\325\007\022\021\n\014CURRENCY_BOV" +
      "\020\330\007\022\021\n\014CURRENCY_PLN\020\331\007\022\021\n\014CURRENCY_BRL\020\332" +
      "\007\022\021\n\014CURRENCY_CLF\020\336\007\022\021\n\014CURRENCY_XSU\020\342\007\022" +
      "\021\n\014CURRENCY_USN\020\345\007B6Z4github.com/outbe/f" +
      "ingerprinting/clients/go/common/v1b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
